<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on AliceLinux</title>
    <link>http://localhost:1313/alicelinux/docs/</link>
    <description>Recent content in Documentation on AliceLinux</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Aug 2024 17:15:52 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/alicelinux/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>packagemanager</title>
      <link>http://localhost:1313/alicelinux/docs/packagemanager/</link>
      <pubDate>Sat, 03 Aug 2024 17:15:52 +0000</pubDate>
      <guid>http://localhost:1313/alicelinux/docs/packagemanager/</guid>
      <description>&lt;h1 id=&#34;package-manager&#34;&gt;PACKAGE MANAGER&lt;/h1&gt;&#xA;&lt;p&gt;In Alice, theres two package manager used, &lt;a href=&#34;https://codeberg.org/emmett1/spm&#34;&gt;spm&lt;/a&gt; and &lt;a href=&#34;https://codeberg.org/emmett1/autils&#34;&gt;autils&lt;/a&gt;. Why two package manager? &lt;code&gt;spm&lt;/code&gt; was written for generic package manager for linux distribution. And &lt;code&gt;autils&lt;/code&gt; is written specifically for &lt;code&gt;Alice&lt;/code&gt; and required &lt;code&gt;spm&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;spm&#34;&gt;spm&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;spm&lt;/code&gt; stands for &lt;code&gt;simple package manager&lt;/code&gt;. It does simple and minimal written in POSIX compliance shell script. It only depends on core utils and tar (or busybox&amp;rsquo;s utils and tar). &lt;code&gt;spm&lt;/code&gt; only intended for compressing some directory into package, then extract package into system with files being tracked into database. Theres is no build script, recipe or ports in &lt;code&gt;spm&lt;/code&gt;. You can write your own tools to use with &lt;code&gt;spm&lt;/code&gt; either like Arch Linux&amp;rsquo;s &lt;code&gt;makepkg&lt;/code&gt;, CRUX&amp;rsquo;s &lt;code&gt;pkgmk&lt;/code&gt; or Slackware&amp;rsquo;s &lt;code&gt;slackbuild&lt;/code&gt; script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>install</title>
      <link>http://localhost:1313/alicelinux/docs/install/</link>
      <pubDate>Sat, 03 Aug 2024 15:21:50 +0000</pubDate>
      <guid>http://localhost:1313/alicelinux/docs/install/</guid>
      <description>&lt;h2 id=&#34;install-alice&#34;&gt;Install Alice&lt;/h2&gt;&#xA;&lt;p&gt;Here is a guide to installing Alice Linux on your computer using the chroot method. You can do this from your existing Linux distribution or from a live environment, such as Alice Live or another Linux distribution. Make sure your chosen environment has the necessary partitioning tools, filesystem tools, and extraction tools.&lt;/p&gt;&#xA;&lt;h3 id=&#34;get-alice-rootfs-tarball&#34;&gt;Get Alice rootfs tarball&lt;/h3&gt;&#xA;&lt;p&gt;Download the Alice rootfs tarball from the &lt;a href=&#34;https://codeberg.org/emmett1/alicelinux/releases&#34;&gt;release&lt;/a&gt; page, along with its &lt;code&gt;sha256sum&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>repos</title>
      <link>http://localhost:1313/alicelinux/docs/repos/</link>
      <pubDate>Sat, 03 Aug 2024 14:53:27 +0000</pubDate>
      <guid>http://localhost:1313/alicelinux/docs/repos/</guid>
      <description>&lt;h1 id=&#34;package-repository&#34;&gt;PACKAGE REPOSITORY&lt;/h1&gt;&#xA;&lt;p&gt;Theres 4 repos available in Alice:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;core: contains base packages for Alice (required)&lt;/li&gt;&#xA;&lt;li&gt;wayland: contains packages that required wayland installed&lt;/li&gt;&#xA;&lt;li&gt;xorg: contains packages that required xorg installed&lt;/li&gt;&#xA;&lt;li&gt;extra: contains packages that can be built with or without either wayland and xorg&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For &lt;code&gt;wayland&lt;/code&gt; and &lt;code&gt;xorg&lt;/code&gt; repo, you can choose either one or enabled both. If both is enabled, packages will be built against both. So you can have either &amp;lsquo;pure wayland&amp;rsquo;, &amp;lsquo;pure xorg&amp;rsquo; or &amp;lsquo;hybrid&amp;rsquo;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

name: Build latest src -> Release up-to-date rootfs
on:
  schedule:
    - cron: '0 0 */7 * *'  # Run every 7 days at midnight
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
      options: "--privileged"
    permissions:
      contents: write

    steps:
    - name: Checkout GitHub repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: 'master'

    - name: Install dependencies
      run: |
        apk add --no-cache wget tar xz

    - name: Download stage rootfs -> update -> rebuild -> mkrootfs.sh
      run: |
        mkdir /tmp/alicerootfs
        wget -qO- https://github.com/xplshn/alicelinux/releases/latest/download/rootfs.tar.xz | tar xJf - -C /tmp/alicerootfs
        wget -qO- https://raw.githubusercontent.com/xplshn/dbin/master/stubdl | sh -s -- --install "/tmp/alicerootfs/usr/local/bin/dbin" -v
        
        cat <<'EOF' > /tmp/alicerootfs/usr/bin/__reconfigure
        #!/bin/sh -x
        mkdir -p /var/cache/src /var/cache/work /var/cache/pkg
        git clone --depth=1 https://github.com/xplshn/alicelinux /var/lib/alicelinux || {
          cd /var/lib/alicelinux && git pull
          cd -
        }
        cat <<'APKG_CONF' > /etc/apkg.conf
        # apkg configuration file
        APKG_REPO="/var/lib/alicelinux/repos/clang /var/lib/alicelinux/repos/core /var/lib/alicelinux/repos/extra"
        APKG_PACKAGE_DIR="/var/cache/pkg"
        APKG_SOURCE_DIR="/var/cache/src"
        APKG_WORK_DIR="/var/cache/work"
        APKG_ALIAS="openssl:libressl clang:llvm gcc:llvm binutils:llvm zlib:zlib-ng"
        APKG_MASK="busybox" # FIXME: Remove when the busybox pkg gets fixed
        export keep_doc=1
        export keep_static=1
        if [ -z "$STANDARD_BUILD_OPTS" ]; then
            set -x
            export LD="mold" CC="clang" CXX="clang++"
            export CFLAGS="-O2 -pipe" # -static"
            set +x
        fi
        export CXXFLAGS="$CFLAGS"
        export MAKEFLAGS="-j$(nproc)"
        export NINJAJOBS="$(nproc)"
        APKG_CONF
        export SPM_FORCEINSTALL=1 APKG_NOPROMPT=1 PATH="/usr/local/bin:$PATH"
        apkg -s sway && echo "Repos are working"
        #DBIN_INSTALL_DIR="/usr/local/bin" DBIN_NOCONFIG=1 /usr/local/bin/dbin add coreutils/fold#github.com.uutils.coreutils.standalone
        apkg -u busybox
        apkg -I meson cmake pkgconf libtool automake perl sway
        apkg -U
        apkg -t
        revdep -v
        rm -rf /var/cache/src/* /var/cache/pkg/* /var/cache/work/*
        EOF

        chmod +x /tmp/alicerootfs/usr/bin/__reconfigure
        /tmp/alicerootfs/usr/bin/apkg-chroot /tmp/alicerootfs __reconfigure
        oPWD="$PWD"
        cd /tmp/alicerootfs && tar -cJpf $oPWD/rootfs.tar.xz *
        #echo "Trying to prepare a rootfs with mkrootfs.sh"
        #/tmp/alicerootfs/usr/bin/apkg-chroot /tmp/alicerootfs __mkrootfs.sh

    - name: Create Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        name: "Latest Build"
        tag_name: "release-${{ github.run_number }}"
        prerelease: false
        draft: false
        generate_release_notes: true
        make_latest: true
        files: |
          ./rootfs.tar.xz
          ./alicelinux-rootfs-$(date +%Y%m%d).tar.xz
          ./alicelinux-rootfs-$(date +%Y%m%d).tar.xz.pkglist
          ./alicelinux-rootfs-$(date +%Y%m%d).tar.xz.sha256sum
      continue-on-error: true

# I like nonsense; it wakes up the brain cells
